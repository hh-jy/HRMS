<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.InformationMapper">
  <resultMap id="BaseResultMap" type="com.bean.Information">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="minority" jdbcType="VARCHAR" property="minority" />
    <result column="emp_bir" jdbcType="DATE" property="empBir" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="culture_level" jdbcType="VARCHAR" property="cultureLevel" />
    <result column="marital_status" jdbcType="CHAR" property="maritalStatus" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="native_place_code" jdbcType="INTEGER" property="nativePlaceCode" />
    <result column="registered_residence_code" jdbcType="INTEGER" property="registeredResidenceCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, emp_name, gender, minority, emp_bir, political_status, culture_level, marital_status, 
    id_card, phone_num, email, native_place_code, registered_residence_code
  </sql>
  <select id="selectByExample" parameterType="com.bean.InformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.InformationExample">
    delete from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Information">
    insert into information (emp_id, emp_name, gender, 
      minority, emp_bir, political_status, 
      culture_level, marital_status, id_card, 
      phone_num, email, native_place_code, 
      registered_residence_code)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{minority,jdbcType=VARCHAR}, #{empBir,jdbcType=DATE}, #{politicalStatus,jdbcType=VARCHAR}, 
      #{cultureLevel,jdbcType=VARCHAR}, #{maritalStatus,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nativePlaceCode,jdbcType=INTEGER}, 
      #{registeredResidenceCode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Information">
    insert into information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="minority != null">
        minority,
      </if>
      <if test="empBir != null">
        emp_bir,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="cultureLevel != null">
        culture_level,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nativePlaceCode != null">
        native_place_code,
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.InformationExample" resultType="java.lang.Long">
    select count(*) from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information
    <set>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.minority != null">
        minority = #{record.minority,jdbcType=VARCHAR},
      </if>
      <if test="record.empBir != null">
        emp_bir = #{record.empBir,jdbcType=DATE},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cultureLevel != null">
        culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=CHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlaceCode != null">
        native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="record.registeredResidenceCode != null">
        registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information
    set emp_id = #{record.empId,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      minority = #{record.minority,jdbcType=VARCHAR},
      emp_bir = #{record.empBir,jdbcType=DATE},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=CHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Information">
    update information
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        minority = #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        emp_bir = #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        culture_level = #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Information">
    update information
    set emp_name = #{empName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      minority = #{minority,jdbcType=VARCHAR},
      emp_bir = #{empBir,jdbcType=DATE},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      culture_level = #{cultureLevel,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=CHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.bean.Information">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="minority" jdbcType="VARCHAR" property="minority" />
    <result column="emp_bir" jdbcType="DATE" property="empBir" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="culture_level" jdbcType="VARCHAR" property="cultureLevel" />
    <result column="marital_status" jdbcType="CHAR" property="maritalStatus" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="native_place_code" jdbcType="INTEGER" property="nativePlaceCode" />
    <result column="registered_residence_code" jdbcType="INTEGER" property="registeredResidenceCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, emp_name, gender, minority, emp_bir, political_status, culture_level, marital_status, 
    id_card, phone_num, email, native_place_code, registered_residence_code
  </sql>
  <select id="selectByExample" parameterType="com.bean.InformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.InformationExample">
    delete from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Information">
    insert into information (emp_id, emp_name, gender, 
      minority, emp_bir, political_status, 
      culture_level, marital_status, id_card, 
      phone_num, email, native_place_code, 
      registered_residence_code)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{minority,jdbcType=VARCHAR}, #{empBir,jdbcType=DATE}, #{politicalStatus,jdbcType=VARCHAR}, 
      #{cultureLevel,jdbcType=VARCHAR}, #{maritalStatus,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nativePlaceCode,jdbcType=INTEGER}, 
      #{registeredResidenceCode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Information">
    insert into information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="minority != null">
        minority,
      </if>
      <if test="empBir != null">
        emp_bir,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="cultureLevel != null">
        culture_level,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nativePlaceCode != null">
        native_place_code,
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.InformationExample" resultType="java.lang.Long">
    select count(*) from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information
    <set>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.minority != null">
        minority = #{record.minority,jdbcType=VARCHAR},
      </if>
      <if test="record.empBir != null">
        emp_bir = #{record.empBir,jdbcType=DATE},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cultureLevel != null">
        culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=CHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlaceCode != null">
        native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="record.registeredResidenceCode != null">
        registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information
    set emp_id = #{record.empId,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      minority = #{record.minority,jdbcType=VARCHAR},
      emp_bir = #{record.empBir,jdbcType=DATE},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=CHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Information">
    update information
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        minority = #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        emp_bir = #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        culture_level = #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Information">
    update information
    set emp_name = #{empName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      minority = #{minority,jdbcType=VARCHAR},
      emp_bir = #{empBir,jdbcType=DATE},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      culture_level = #{cultureLevel,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=CHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.bean.Information">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="minority" jdbcType="VARCHAR" property="minority" />
    <result column="emp_bir" jdbcType="DATE" property="empBir" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="culture_level" jdbcType="VARCHAR" property="cultureLevel" />
    <result column="marital_status" jdbcType="CHAR" property="maritalStatus" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="native_place_code" jdbcType="INTEGER" property="nativePlaceCode" />
    <result column="registered_residence_code" jdbcType="INTEGER" property="registeredResidenceCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, emp_name, gender, minority, emp_bir, political_status, culture_level, marital_status, 
    id_card, phone_num, email, native_place_code, registered_residence_code
  </sql>
  <select id="selectByExample" parameterType="com.bean.InformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.InformationExample">
    delete from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Information">
    insert into information (emp_id, emp_name, gender, 
      minority, emp_bir, political_status, 
      culture_level, marital_status, id_card, 
      phone_num, email, native_place_code, 
      registered_residence_code)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{minority,jdbcType=VARCHAR}, #{empBir,jdbcType=DATE}, #{politicalStatus,jdbcType=VARCHAR}, 
      #{cultureLevel,jdbcType=VARCHAR}, #{maritalStatus,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nativePlaceCode,jdbcType=INTEGER}, 
      #{registeredResidenceCode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Information">
    insert into information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="minority != null">
        minority,
      </if>
      <if test="empBir != null">
        emp_bir,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="cultureLevel != null">
        culture_level,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nativePlaceCode != null">
        native_place_code,
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.InformationExample" resultType="java.lang.Long">
    select count(*) from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information
    <set>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.minority != null">
        minority = #{record.minority,jdbcType=VARCHAR},
      </if>
      <if test="record.empBir != null">
        emp_bir = #{record.empBir,jdbcType=DATE},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cultureLevel != null">
        culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=CHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlaceCode != null">
        native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="record.registeredResidenceCode != null">
        registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information
    set emp_id = #{record.empId,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      minority = #{record.minority,jdbcType=VARCHAR},
      emp_bir = #{record.empBir,jdbcType=DATE},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      culture_level = #{record.cultureLevel,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=CHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      native_place_code = #{record.nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{record.registeredResidenceCode,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Information">
    update information
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="minority != null">
        minority = #{minority,jdbcType=VARCHAR},
      </if>
      <if test="empBir != null">
        emp_bir = #{empBir,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cultureLevel != null">
        culture_level = #{cultureLevel,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nativePlaceCode != null">
        native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      </if>
      <if test="registeredResidenceCode != null">
        registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Information">
    update information
    set emp_name = #{empName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      minority = #{minority,jdbcType=VARCHAR},
      emp_bir = #{empBir,jdbcType=DATE},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      culture_level = #{cultureLevel,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=CHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      native_place_code = #{nativePlaceCode,jdbcType=INTEGER},
      registered_residence_code = #{registeredResidenceCode,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>