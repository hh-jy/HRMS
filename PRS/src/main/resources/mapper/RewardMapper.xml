<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.RewardMapper">
  <resultMap id="BaseResultMap" type="com.bean.Reward">
    <id column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="reward_emp_id" jdbcType="INTEGER" property="rewardEmpId" />
    <result column="reward_date" jdbcType="DATE" property="rewardDate" />
    <result column="reward_mon" jdbcType="DOUBLE" property="rewardMon" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.Reward">
    <result column="reward_reason" jdbcType="LONGVARCHAR" property="rewardReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reward_id, reward_emp_id, reward_date, reward_mon
  </sql>
  <sql id="Blob_Column_List">
    reward_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bean.RewardExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bean.RewardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.RewardExample">
    delete from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Reward">
    insert into reward (reward_id, reward_emp_id, reward_date, 
      reward_mon, reward_reason)
    values (#{rewardId,jdbcType=INTEGER}, #{rewardEmpId,jdbcType=INTEGER}, #{rewardDate,jdbcType=DATE}, 
      #{rewardMon,jdbcType=DOUBLE}, #{rewardReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Reward">
    insert into reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        reward_id,
      </if>
      <if test="rewardEmpId != null">
        reward_emp_id,
      </if>
      <if test="rewardDate != null">
        reward_date,
      </if>
      <if test="rewardMon != null">
        reward_mon,
      </if>
      <if test="rewardReason != null">
        reward_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="rewardEmpId != null">
        #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.RewardExample" resultType="java.lang.Long">
    select count(*) from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reward
    <set>
      <if test="record.rewardId != null">
        reward_id = #{record.rewardId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardEmpId != null">
        reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardDate != null">
        reward_date = #{record.rewardDate,jdbcType=DATE},
      </if>
      <if test="record.rewardMon != null">
        reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="record.rewardReason != null">
        reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Reward">
    update reward
    <set>
      <if test="rewardEmpId != null">
        reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        reward_date = #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        reward_mon = #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        reward_reason = #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE},
      reward_reason = #{rewardReason,jdbcType=LONGVARCHAR}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.bean.Reward">
    <id column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="reward_emp_id" jdbcType="INTEGER" property="rewardEmpId" />
    <result column="reward_date" jdbcType="DATE" property="rewardDate" />
    <result column="reward_mon" jdbcType="DOUBLE" property="rewardMon" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.Reward">
    <result column="reward_reason" jdbcType="LONGVARCHAR" property="rewardReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reward_id, reward_emp_id, reward_date, reward_mon
  </sql>
  <sql id="Blob_Column_List">
    reward_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bean.RewardExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bean.RewardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.RewardExample">
    delete from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Reward">
    insert into reward (reward_id, reward_emp_id, reward_date, 
      reward_mon, reward_reason)
    values (#{rewardId,jdbcType=INTEGER}, #{rewardEmpId,jdbcType=INTEGER}, #{rewardDate,jdbcType=DATE}, 
      #{rewardMon,jdbcType=DOUBLE}, #{rewardReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Reward">
    insert into reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        reward_id,
      </if>
      <if test="rewardEmpId != null">
        reward_emp_id,
      </if>
      <if test="rewardDate != null">
        reward_date,
      </if>
      <if test="rewardMon != null">
        reward_mon,
      </if>
      <if test="rewardReason != null">
        reward_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="rewardEmpId != null">
        #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.RewardExample" resultType="java.lang.Long">
    select count(*) from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reward
    <set>
      <if test="record.rewardId != null">
        reward_id = #{record.rewardId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardEmpId != null">
        reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardDate != null">
        reward_date = #{record.rewardDate,jdbcType=DATE},
      </if>
      <if test="record.rewardMon != null">
        reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="record.rewardReason != null">
        reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Reward">
    update reward
    <set>
      <if test="rewardEmpId != null">
        reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        reward_date = #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        reward_mon = #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        reward_reason = #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE},
      reward_reason = #{rewardReason,jdbcType=LONGVARCHAR}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.bean.Reward">
    <id column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="reward_emp_id" jdbcType="INTEGER" property="rewardEmpId" />
    <result column="reward_date" jdbcType="DATE" property="rewardDate" />
    <result column="reward_mon" jdbcType="DOUBLE" property="rewardMon" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.Reward">
    <result column="reward_reason" jdbcType="LONGVARCHAR" property="rewardReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reward_id, reward_emp_id, reward_date, reward_mon
  </sql>
  <sql id="Blob_Column_List">
    reward_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bean.RewardExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bean.RewardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.RewardExample">
    delete from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Reward">
    insert into reward (reward_id, reward_emp_id, reward_date, 
      reward_mon, reward_reason)
    values (#{rewardId,jdbcType=INTEGER}, #{rewardEmpId,jdbcType=INTEGER}, #{rewardDate,jdbcType=DATE}, 
      #{rewardMon,jdbcType=DOUBLE}, #{rewardReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Reward">
    insert into reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        reward_id,
      </if>
      <if test="rewardEmpId != null">
        reward_emp_id,
      </if>
      <if test="rewardDate != null">
        reward_date,
      </if>
      <if test="rewardMon != null">
        reward_mon,
      </if>
      <if test="rewardReason != null">
        reward_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rewardId != null">
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="rewardEmpId != null">
        #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.RewardExample" resultType="java.lang.Long">
    select count(*) from reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reward
    <set>
      <if test="record.rewardId != null">
        reward_id = #{record.rewardId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardEmpId != null">
        reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardDate != null">
        reward_date = #{record.rewardDate,jdbcType=DATE},
      </if>
      <if test="record.rewardMon != null">
        reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="record.rewardReason != null">
        reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE},
      reward_reason = #{record.rewardReason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reward
    set reward_id = #{record.rewardId,jdbcType=INTEGER},
      reward_emp_id = #{record.rewardEmpId,jdbcType=INTEGER},
      reward_date = #{record.rewardDate,jdbcType=DATE},
      reward_mon = #{record.rewardMon,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Reward">
    update reward
    <set>
      <if test="rewardEmpId != null">
        reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      </if>
      <if test="rewardDate != null">
        reward_date = #{rewardDate,jdbcType=DATE},
      </if>
      <if test="rewardMon != null">
        reward_mon = #{rewardMon,jdbcType=DOUBLE},
      </if>
      <if test="rewardReason != null">
        reward_reason = #{rewardReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE},
      reward_reason = #{rewardReason,jdbcType=LONGVARCHAR}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Reward">
    update reward
    set reward_emp_id = #{rewardEmpId,jdbcType=INTEGER},
      reward_date = #{rewardDate,jdbcType=DATE},
      reward_mon = #{rewardMon,jdbcType=DOUBLE}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
</mapper>